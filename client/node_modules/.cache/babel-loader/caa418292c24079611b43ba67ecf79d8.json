{"ast":null,"code":"import _defineProperty from \"/home/sandun/Downloads/react-project/office/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/sandun/Downloads/react-project/office/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandun/Downloads/react-project/office/contact-keeper/client/src/components/contacts/ContactForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        updateContact = contactContext.updateContact,\n        clearCurrent = contactContext.clearCurrent,\n        current = contactContext.current;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current]);\n\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(current);\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, current ? \"Edit Contact\" : \"Add Contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === \"personal\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"Personal\", \"  \", React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === \"professional\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? \"Update Contact\" : \"Add Contact\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Clear\")));\n};","map":{"version":3,"sources":["/home/sandun/Downloads/react-project/office/contact-keeper/client/src/components/contacts/ContactForm.jsx"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","clearCurrent","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AAD+B,QAGvBG,UAHuB,GAG8BD,cAH9B,CAGvBC,UAHuB;AAAA,QAGXC,aAHW,GAG8BF,cAH9B,CAGXE,aAHW;AAAA,QAGIC,YAHJ,GAG8BH,cAH9B,CAGIG,YAHJ;AAAA,QAGkBC,OAHlB,GAG8BJ,cAH9B,CAGkBI,OAHlB;AAK/BP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,KAAK,IAAhB,EAAsB;AACpBC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAAC;AACTC,QAAAA,IAAI,EAAE,EADG;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,CAAV;AAMD;AACF,GAXQ,EAWN,CAACT,cAAD,EAAiBI,OAAjB,CAXM,CAAT;;AAL+B,oBAkBDT,QAAQ,CAAC;AACrCW,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,IAAI,EAAE;AAJ+B,GAAD,CAlBP;AAAA;AAAA,QAkBxBC,OAlBwB;AAAA,QAkBfL,UAlBe;;AAAA,QAyBvBC,IAzBuB,GAyBMI,OAzBN,CAyBvBJ,IAzBuB;AAAA,QAyBjBC,KAzBiB,GAyBMG,OAzBN,CAyBjBH,KAzBiB;AAAA,QAyBVC,KAzBU,GAyBME,OAzBN,CAyBVF,KAzBU;AAAA,QAyBHC,IAzBG,GAyBMC,OAzBN,CAyBHD,IAzBG;;AA2B/B,QAAME,QAAQ,GAAGC,CAAC,IAChBP,UAAU,mBAAMK,OAAN;AAAe,KAACE,CAAC,CAACC,MAAF,CAASP,IAAV,GAAiBM,CAAC,CAACC,MAAF,CAASC;AAAzC,KADZ;;AAGA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIZ,OAAO,KAAK,IAAhB,EAAsB;AACpBH,MAAAA,UAAU,CAACS,OAAD,CAAV;AACD,KAFD,MAEO;AACLR,MAAAA,aAAa,CAACE,OAAD,CAAb;AACD;;AACDa,IAAAA,QAAQ;AACT,GARD;;AAUA,QAAMA,QAAQ,GAAG,MAAM;AACrBd,IAAAA,YAAY;AACb,GAFD;;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEY,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,OAAO,GAAG,cAAH,GAAoB,aAD9B,CADF,EAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEE,IAJT;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAkBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEH,KAJT;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,EA0BE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,OAAO,EAAEF,IAAI,KAAK,UAJpB;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,cAiCW,IAjCX,EAkCE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,OAAO,EAAEF,IAAI,KAAK,cAJpB;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,kBA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEP,OAAO,GAAG,gBAAH,GAAsB,aAFtC;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,EAiDGA,OAAO,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEa,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAlDJ,CADF;AA2DD,CAvGM","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, updateContact, clearCurrent, current } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current]);\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(current);\n    }\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">\n        {current ? \"Edit Contact\" : \"Add Contact\"}\n      </h2>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        checked={type === \"personal\"}\n        onChange={onChange}\n      />\n      Personal{\"  \"}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        checked={type === \"professional\"}\n        onChange={onChange}\n      />\n      Professional\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? \"Update Contact\" : \"Add Contact\"}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      {current && (\n        <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}