{"ast":null,"code":"import _slicedToArray from \"/home/sandun/Downloads/react-project/office/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACT, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from \"../types\";\n\nconst ContextState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContextState;","map":{"version":3,"sources":["/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","ContextState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","console","log","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACT,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS\n} from \"../types\";\n\nconst ContextState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update Contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        updateContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        filterContacts,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContextState;\n"]},"metadata":{},"sourceType":"module"}