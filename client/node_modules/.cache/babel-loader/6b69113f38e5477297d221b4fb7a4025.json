{"ast":null,"code":"import _slicedToArray from \"/home/sandun/Downloads/react-project/office/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Get Contacts\n\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      // await axios.delete(`/api/contacts/${id}`);\n      await axios.delete(\"/api/contacts/\".concat(id));\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(\"/api/contacts\", contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: contact\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      loading: state.loading,\n      getContacts,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","console","log","deleteContact","id","delete","updateContact","put","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","loading","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS\n} from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  //Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async id => {\n    try {\n      // await axios.delete(`/api/contacts/${id}`);\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Update Contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.put(\"/api/contacts\", contact, config);\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: contact\n      });\n    } catch (err) {\n      console.log(\"err.......\", err);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        getContacts,\n        addContact,\n        updateContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        filterContacts,\n        clearFilter,\n        clearContacts\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}