{"ast":null,"code":"import _slicedToArray from \"/home/sandun/Downloads/react-project/office/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\n\nconst ContextState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add Contact\n\n\n  const addContact = contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact\n      });\n    } catch (err) {}\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContextState;","map":{"version":3,"sources":["/home/sandun/Downloads/react-project/office/contact-keeper/client/src/context/contact/ContactState.jsx"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContextState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","type","payload","err","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,OAAO,EAAE,IAFU;AAGnBC,IAAAA,QAAQ,EAAE;AAHS,GAArB;;AAD4B,sBAOFhB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAPR;AAAA;AAAA,QAOrBI,KAPqB;AAAA,QAOdC,QAPc,oBAS5B;;;AACA,QAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5B,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACFJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEnB,WADC;AAEPoB,QAAAA,OAAO,EAAEJ;AAFF,OAAD,CAAR;AAID,KALD,CAKE,OAAOK,GAAP,EAAY,CAAE;AACjB,GAZD,CAV4B,CAwB5B;;;AACA,QAAMC,aAAa,GAAGC,EAAE,IAAI;AAC1BT,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAElB,cADC;AAEPmB,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GALD,CAzB4B,CAgC5B;;;AACA,QAAMC,UAAU,GAAGR,OAAO,IAAI;AAC5BF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEjB,WAAR;AAAqBkB,MAAAA,OAAO,EAAEJ;AAA9B,KAAD,CAAR;AACD,GAFD,CAjC4B,CAqC5B;;;AACA,QAAMS,YAAY,GAAG,MAAM;AACzBX,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACD,GAFD,CAtC4B,CA0C5B;;;AACA,QAAMuB,aAAa,GAAGV,OAAO,IAAI;AAC/BF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEf,cADC;AAEPgB,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GALD,CA3C4B,CAkD5B;;;AACA,QAAMW,cAAc,GAAGC,IAAI,IAAI;AAC7Bd,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEd,eADC;AAEPe,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAID,GALD,CAnD4B,CA0D5B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAJD;;AAKA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADX;AAELC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFV;AAGLC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHX;AAILG,MAAAA,UAJK;AAKLW,MAAAA,aALK;AAMLJ,MAAAA,aANK;AAOLE,MAAAA,UAPK;AAQLC,MAAAA,YARK;AASLE,MAAAA,cATK;AAULE,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGrB,KAAK,CAACsB,QAdT,CADF;AAkBD,CAlFD;;AAoFA,eAAevB,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from \"../types\";\n\nconst ContextState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add Contact\n  const addContact = contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      dispatch({\n        type: ADD_CONTACT,\n        payload: contact\n      });\n    } catch (err) {}\n  };\n\n  // Delete Contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update Contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        updateContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        filterContacts,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContextState;\n"]},"metadata":{},"sourceType":"module"}